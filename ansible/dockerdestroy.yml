---
- hosts: development, production
  become: true
  gather_facts: yes

  tasks:

      # Check if dockerfiles directory exists
    - name: Checking if a directory exists
      stat:
        path: /home/{{ ansible_user }}/dockerfiles
      register: dir_data

    - name: Report a missing directory
      debug:
        msg: "dockerfiles directory doesn't exist"
      when: not dir_data.stat.exists

    - name: Report an existing directory
      debug:
        msg: "dockerfiles directory exists"
      when: dir_data.stat.exists and dir_data.stat.isdir

    - name: Stop services
      community.docker.docker_compose_v2:
        project_src: /home/{{ ansible_user }}/dockerfiles
        state: stopped
      register: output
      when: dir_data.stat.exists and dir_data.stat.isdir

    - name: Remove existing services
      community.docker.docker_compose_v2:
        project_src: /home/{{ ansible_user }}/dockerfiles
        state: absent
        remove_orphans: true
        remove_volumes: true
      when: dir_data.stat.exists and dir_data.stat.isdir

    - name: Remove nginx image
      community.docker.docker_image:
        name: "{{ docker_nginx_image_name }}"
        source: local
        state: absent
        tag: latest
        force_absent: yes

    - name: Remove nginx image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name }}"
        tag: "{{ docker_nginx_image_version }}"
        force_absent: yes

    - name: Remove nginx image 2
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name_2 }}"
        tag: latest
        force_absent: yes

    - name: Remove nginx image 2
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name_2 }}"
        tag: "{{ docker_nginx_image_version_2 }}"
        force_absent: yes

    - name: Remove appx image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_appx_image_name }}"
        tag: latest
        force_absent: yes

    - name: Remove appx image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_appx_image_name }}"
        tag: "{{ docker_appx_image_version }}"
        force_absent: yes

    - name: Remove traefikcustom latest image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_traefik_image_name }}"
        tag: latest
        force_absent: yes

    - name: Remove traefikcustom image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_traefik_image_name }}"
        tag: "{{ docker_traefik_image_version }}"
        force_absent: yes

    # Do not run this on Dev PC
    - name: Recursively remove directory
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/dockerfiles"
        state: absent
      when: ("docker_profile == 'production'") and (dir_data.stat.exists and dir_data.stat.isdir)
