---
- name: Add Hashicorp Vagrant GPG Key
  apt_key:
    url: https://apt.releases.hashicorp.com/gpg

- name: Add Hashicorp Vagrant Repository
  apt_repository:
    repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main

- name: Install packages
  ansible.builtin.apt:
    pkg:
      - qemu
      - libvirt-daemon-system
      - libvirt-dev
      - ebtables
      - libguestfs-tools
    update_cache: yes

- name: Install Vagrant
  ansible.builtin.apt:
    name: vagrant={{ vagrant_version }}
    state: present
    update_cache: yes

- name: Install packages
  ansible.builtin.apt:
    pkg:
      - libvirt-clients
      - libxslt-dev
      - libxml2-dev
      - zlib1g-dev
      - ruby-dev
      - ruby-libvirt
      - dnsmasq-base
      - qemu-kvm
      - virtinst
      - bridge-utils
      - nfs-kernel-server
      - virt-manager
      - build-essential

- name: vagrant plugin list
  become: false
  ansible.builtin.shell: vagrant plugin list
  register: command_output
  args: 
    executable: /bin/bash

- name: Set plugins_installed
  become: false
  set_fact: 
    plugins_installed: "{{ command_output.stdout_lines }}"

- name: Populate plugins_installed_with_version
  become: false
  when: "(plugins_installed|length) > 0"
  set_fact: plugin_name="{{ item | regex_replace('^(?P<plugin>\\w+\\-\\w+) (.+)$','\\g<plugin>') }}"
  loop: "{{ plugins_installed }}"
  register: plugins_installed_with_version

- name: Set plugins_installed_names_only
  become: false
  when: "(plugins_installed_with_version|length) > 0"
  set_fact:
    plugins_installed_names_only: "{{ plugins_installed_names_only + [item.ansible_facts.plugin_name] }}"
  loop: "{{ plugins_installed_with_version.results }}"

- name: Set missing_plugins
  become: false
  set_fact:
    missing_plugins: "{{ plugins_to_install | difference(plugins_installed_names_only) }}"

- name: Print missing_plugins
  become: false
  ansible.builtin.debug: var=missing_plugins

- name: Install missing Vagrant plugins
  become: false
  when: "{{ (missing_plugins|length) > 0}}"
  ansible.builtin.shell: "vagrant plugin install {{ item }}"
  loop: "{{ missing_plugins }}"
  args: 
    executable: /bin/bash

- name: Enable service libvirtd and ensure it is not masked
  ansible.builtin.systemd:
    name: libvirtd
    enabled: true
    masked: no

- name: Make sure systemd service is running
  ansible.builtin.systemd:
    state: started
    name: libvirtd

- name: customize /etc/environment
  become: true
  ansible.builtin.lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  with_items: "{{ os_environment }}"

- name: source /etc/environment
  become: true
  ansible.builtin.shell: source /etc/environment
  args:
    executable: /bin/bash

