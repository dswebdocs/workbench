---
- hosts: all
  become: true
  gather_facts: yes

  tasks:
    # - name: hash -r
    #   shell: hash -r

    - name: symlink python
      raw: |
        if [ ! -f /usr/bin/python3 ]; then 
          ln --symbolic python3.10 /usr/bin/python3;
        fi
      become: true

    - name: symlink python
      raw: |
        if [ ! -f /usr/bin/python ]; then 
          ln --symbolic python3.10 /usr/bin/python;
        fi
      become: true

    - name: Install requests Python package
      ansible.builtin.pip:
        name: requests

    - name: docker compose down --volumes
      shell: "docker compose down --volumes"
      args:
        chdir: /home/{{ ansible_user }}/{{ dockerfiles }}
      ignore_errors: true

    - name: Remove image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name }}"
        tag: latest

    - name: Remove image
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name }}"
        tag: "{{ docker_nginx_image_version }}"

    - name: Remove image 2
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name_2 }}"
        tag: latest

    - name: Remove image 2
      community.docker.docker_image:
        state: absent
        source: local
        name: "{{ docker_nginx_image_name_2 }}"
        tag: "{{ docker_nginx_image_version_2 }}"

    - name: Copy files with rsync
      ansible.posix.synchronize:
        archive: false
        delete: true
        dirs: false
        recursive: true
        group: false
        owner: false
        mode: push
        times: true
        verify_host: true
        private_key: '{{ ansible_ssh_private_key_file }}'
        set_remote_user: true
        src: '{{ workbench_full_path }}/{{ dockerfiles }}'
        dest: '/home/{{ ansible_user }}'
        dest_port: '{{ ansible_port }}'
        rsync_timeout: 600

    - name: Build nginx image
      community.docker.docker_image:
        name: "{{ docker_nginx_image_name }}"
        build:
          dockerfile: Dockerfile
          path: /home/{{ ansible_user }}/{{ dockerfiles }}/{{ nginx_directory_name }}
          args:
            log_volume: /var/log/nginx
            chdir: /home/{{ ansible_user }}/{{ dockerfiles }}
        state: present
        repository: "{{ docker_nginx_image_name }}:{{ docker_nginx_image_version }}"
        source: build
        push: false

    - name: Build nginx2 image
      community.docker.docker_image:
        name: "{{ docker_nginx_image_name_2 }}"
        build:
          dockerfile: Dockerfile
          path: /home/{{ ansible_user }}/{{ dockerfiles }}/{{ nginx_directory_name_2 }}
          args:
            log_volume: /var/log/nginx
            chdir: /home/{{ ansible_user }}/{{ dockerfiles }}
        state: present
        repository: "{{ docker_nginx_image_name_2 }}:{{ docker_nginx_image_version_2 }}"
        source: build
        push: false

    - name: docker compose up
      shell: "docker compose up --detach"
      args:
        chdir: /home/{{ ansible_user }}/{{ dockerfiles }}
